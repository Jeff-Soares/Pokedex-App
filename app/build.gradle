plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.apollographql.apollo' version "$apollo_version"
    id "androidx.navigation.safeargs.kotlin"

}

android {
    compileSdk 30

    defaultConfig {
        applicationId "dev.jx.pokedex"
        minSdk 23
        targetSdk 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        def api_version = "v1beta"

        debug {
            buildConfigField 'String', 'POKE_API_URL',
                    "\"https://beta.pokeapi.co/graphql/$api_version\""

            // These image URLs is because PokeAPI GraphQL version is in beta
            // and pokemons sprites returns null
            buildConfigField 'String', 'POKE_IMAGE_URL',
                    "\"https://raw.githubusercontent.com/" +
                            "PokeAPI/sprites/master/sprites/pokemon/" +
                            "other/official-artwork/\""
        }

        release {
            buildConfigField 'String', 'POKE_API_URL',
                    "\"https://beta.pokeapi.co/graphql/$api_version\""

            // These image URLs is because PokeAPI GraphQL version is in beta
            // and pokemons sprites returns null
            buildConfigField 'String', 'POKE_IMAGE_URL',
                    "\"https://raw.githubusercontent.com/" +
                            "PokeAPI/sprites/master/sprites/pokemon/" +
                            "other/official-artwork/\""

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    viewBinding {
        enabled = true
    }

    apollo {
        packageName.set("dev.jx.pokedex")
        generateKotlinModels.set(true)
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.fragment:fragment-ktx:1.3.6'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'androidx.dynamicanimation:dynamicanimation:1.0.0'

    implementation 'com.google.android.flexbox:flexbox:3.0.0'

    implementation "androidx.navigation:navigation-fragment-ktx:2.3.5"
    implementation "androidx.navigation:navigation-ui-ktx:2.3.5"

    implementation 'com.github.bumptech.glide:glide:4.12.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2"

    implementation "com.apollographql.apollo:apollo-runtime:$apollo_version"
    implementation "com.apollographql.apollo:apollo-rx3-support:$apollo_version"
    implementation "com.apollographql.apollo:apollo-coroutines-support:$apollo_version"
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.1"

    implementation "com.google.dagger:hilt-android:$dagger_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    annotationProcessor "com.google.dagger:hilt-compiler:$dagger_version"
    kapt "com.google.dagger:hilt-android-compiler:$dagger_version"

    implementation "com.squareup.moshi:moshi:1.12.0"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:1.12.0"

    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}
